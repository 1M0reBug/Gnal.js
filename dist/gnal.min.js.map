{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///gnal.min.js","webpack:///webpack/bootstrap 2c5ca5567d80a71a581e","webpack:///./src/gnal.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_typeof","Symbol","iterator","obj","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","Gnal","_mainContainer","_options","mainContainer","options","undefined","container","document","querySelector","useHash","preferredLanguage","window","location","hash","replace","idx","object","translations","hasCurrentProperty","hasOwnProperty","hasCurrentLangage","console","error","keys","Error","translation","elements","querySelectorAll","el","content","getAttribute","trim","slice","innerHTML","textContent","updateHash","translate","default"],"mappings":"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","file":"gnal.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Gnal\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Gnal\"] = factory();\n\telse\n\t\troot[\"Gnal\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Gnal\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Gnal\"] = factory();\n\telse\n\t\troot[\"Gnal\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * This library is a low-impact, no dependency i18n helper.\n\t * It provides tools to easily translate sites, with a simple JSON\n\t * object.\n\t * It also provides elements to display a hash indicating the translation\n\t * and helping people to share a translation-aware URL.\n\t */\n\tvar Gnal = function () {\n\t    /**\n\t     * Example\n\t     *\n\t     * ```js\n\t     * const gnal = new Gnal({ useHash: true });\n\t     * gnal\n\t     *  .translations('en', { GREETINGS: 'hello' })\n\t     *  .translations('fr', { GREETINGS: 'bonjour' })\n\t     *  .translations('es', { GREETINGS: 'holÃ ' })\n\t     *  .translations('it', { GREETINGS: 'ciao' })\n\t     *  .translations('hu', { GREETINGS: 'szia' })\n\t     *  .choose('en')\n\t     *  .translate();\n\t     *\n\t     * document.querySelector('#btn-es').onclick =\n\t     *      e => gnal.changeTo('es');\n\t     * ```\n\t     * @param {string} [mainContainer] optional container element where\n\t     * the translation takes place\n\t     * @param {Object} options some configuration options\n\t     * @param {boolean} options.useHash if it must use the hash or not.\n\t     */\n\t    function Gnal(_mainContainer, _options) {\n\t        _classCallCheck(this, Gnal);\n\t\n\t        var mainContainer = _mainContainer;\n\t        var options = _options;\n\t        if ((typeof mainContainer === 'undefined' ? 'undefined' : _typeof(mainContainer)) === 'object') {\n\t            options = mainContainer;\n\t            mainContainer = undefined;\n\t        }\n\t        options = options || {};\n\t        this.container = mainContainer ? document.querySelector('#' + mainContainer) : document.querySelector('body');\n\t        this.useHash = options.useHash || false;\n\t\n\t        if (this.useHash) {\n\t            this.preferredLanguage = window.location.hash.replace('#', '').replace('/', '');\n\t        }\n\t    }\n\t    /**\n\t     * Register new key values for `idx` language.\n\t     * Each key in the `object` must exist in all\n\t     * the registered objects (which is not checked)\n\t     * if you want to include HTML in your text start\n\t     * it with `#!>`\n\t     * @param {string} idx the index/language ISO code used as language selector\n\t     * @param {Object} object The unique key by phrase\n\t     * @return this to chain methods\n\t     */\n\t\n\t\n\t    _createClass(Gnal, [{\n\t        key: 'translations',\n\t        value: function translations(idx, object) {\n\t            this.translations[idx] = object;\n\t            return this;\n\t        }\n\t        /**\n\t         * specify a key from the registered objects as displayed language\n\t         * is used as fallback language is useHash and hash is not valid\n\t         * @throws {Error} if the key does not exists\n\t         * @param {string} idx the key to choose as language\n\t         * @return this to chain methods\n\t         */\n\t\n\t    }, {\n\t        key: 'choose',\n\t        value: function choose(idx) {\n\t            var hasCurrentProperty = Object.prototype.hasOwnProperty.call(this.translations, idx);\n\t            var hasCurrentLangage = Object.prototype.hasOwnProperty.call(this.translations, this.preferredLanguage);\n\t\n\t            if (!hasCurrentProperty) {\n\t                // eslint-disable-next-line\n\t                console.error('You must choose one of ' + Object.keys(this.translations));\n\t            }\n\t            if (this.useHash && hasCurrentLangage) {\n\t                return this;\n\t            }\n\t\n\t            this.preferredLanguage = idx;\n\t            return this;\n\t        }\n\t        /**\n\t         * starts the translation process -> looking for every `[i18n]`\n\t         * elements inside the container Element\n\t         * @throws {Error} if translations or choose haven't been called\n\t         */\n\t\n\t    }, {\n\t        key: 'translate',\n\t        value: function translate() {\n\t            if (!this.preferredLanguage) {\n\t                throw Error('please choose a language to display, see #choose()');\n\t            }\n\t            if (!this.translations) {\n\t                throw Error('please register translations, see #translations()');\n\t            }\n\t\n\t            var translation = this.translations[this.preferredLanguage];\n\t            var elements = this.container.querySelectorAll('[i18n]');\n\t            for (var i = 0; i < elements.length; i++) {\n\t                var el = elements[i];\n\t                var content = translation[el.getAttribute('i18n')].trim();\n\t                if (content.slice(0, 3) === '#!>') {\n\t                    el.innerHTML = content.slice(3).trim();\n\t                } else {\n\t                    el.textContent = content;\n\t                }\n\t            }\n\t\n\t            if (this.useHash) this.updateHash();\n\t        }\n\t        /**\n\t         * change the displayed language for a new one. the behaviour is to change\n\t         * the language and call translate\n\t         * @param {string} idx the new language to display\n\t         */\n\t\n\t    }, {\n\t        key: 'changeTo',\n\t        value: function changeTo(idx) {\n\t            var hasCurrentProperty = Object.prototype.hasOwnProperty.call(this.translations, idx);\n\t            if (!hasCurrentProperty) {\n\t                // eslint-disable-next-line\n\t                throw new Error('You can\\'t change to a non existant language, use one of ' + Object.keys(this.translations));\n\t            }\n\t\n\t            if (this.preferredLanguage === idx) return;\n\t\n\t            this.preferredLanguage = idx;\n\t            this.translate();\n\t        }\n\t        /**\n\t         * Change the hash by appending the current lang code to the URL\n\t         */\n\t\n\t    }, {\n\t        key: 'updateHash',\n\t        value: function updateHash() {\n\t            window.location.hash = '#/' + this.preferredLanguage;\n\t        }\n\t    }]);\n\t\n\t    return Gnal;\n\t}();\n\t\n\texports.default = Gnal;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// gnal.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2c5ca5567d80a71a581e","/**\n * This library is a low-impact, no dependency i18n helper.\n * It provides tools to easily translate sites, with a simple JSON\n * object.\n * It also provides elements to display a hash indicating the translation\n * and helping people to share a translation-aware URL.\n */\nclass Gnal {\n    /**\n     * Example\n     *\n     * ```js\n     * const gnal = new Gnal({ useHash: true });\n     * gnal\n     *  .translations('en', { GREETINGS: 'hello' })\n     *  .translations('fr', { GREETINGS: 'bonjour' })\n     *  .translations('es', { GREETINGS: 'holÃ ' })\n     *  .translations('it', { GREETINGS: 'ciao' })\n     *  .translations('hu', { GREETINGS: 'szia' })\n     *  .choose('en')\n     *  .translate();\n     *\n     * document.querySelector('#btn-es').onclick =\n     *      e => gnal.changeTo('es');\n     * ```\n     * @param {string} [mainContainer] optional container element where\n     * the translation takes place\n     * @param {Object} options some configuration options\n     * @param {boolean} options.useHash if it must use the hash or not.\n     */\n    constructor(_mainContainer, _options) {\n        let mainContainer = _mainContainer;\n        let options = _options;\n        if (typeof mainContainer === 'object') {\n            options = mainContainer;\n            mainContainer = undefined;\n        }\n        options = options || {};\n        this.container = mainContainer\n                        ? document.querySelector(`#${mainContainer}`)\n                        : document.querySelector('body');\n        this.useHash = options.useHash || false;\n\n        if (this.useHash) {\n            this.preferredLanguage = window.location.hash\n                                        .replace('#', '')\n                                        .replace('/', '');\n        }\n    }\n    /**\n     * Register new key values for `idx` language.\n     * Each key in the `object` must exist in all\n     * the registered objects (which is not checked)\n     * if you want to include HTML in your text start\n     * it with `#!>`\n     * @param {string} idx the index/language ISO code used as language selector\n     * @param {Object} object The unique key by phrase\n     * @return this to chain methods\n     */\n    translations(idx, object) {\n        this.translations[idx] = object;\n        return this;\n    }\n    /**\n     * specify a key from the registered objects as displayed language\n     * is used as fallback language is useHash and hash is not valid\n     * @throws {Error} if the key does not exists\n     * @param {string} idx the key to choose as language\n     * @return this to chain methods\n     */\n    choose(idx) {\n        const hasCurrentProperty = Object.prototype.hasOwnProperty.call(this.translations, idx);\n        const hasCurrentLangage =\n            Object.prototype.hasOwnProperty.call(this.translations, this.preferredLanguage);\n\n        if (!hasCurrentProperty) {\n            // eslint-disable-next-line\n            console.error('You must choose one of ' +\n                Object.keys(this.translations));\n        }\n        if (this.useHash && hasCurrentLangage) {\n            return this;\n        }\n\n        this.preferredLanguage = idx;\n        return this;\n    }\n    /**\n     * starts the translation process -> looking for every `[i18n]`\n     * elements inside the container Element\n     * @throws {Error} if translations or choose haven't been called\n     */\n    translate() {\n        if (!this.preferredLanguage) {\n            throw Error('please choose a language to display, see #choose()');\n        }\n        if (!this.translations) {\n            throw Error('please register translations, see #translations()');\n        }\n\n        const translation = this.translations[this.preferredLanguage];\n        const elements = this.container.querySelectorAll('[i18n]');\n        for (let i = 0; i < elements.length; i++) {\n            const el = elements[i];\n            const content = translation[el.getAttribute('i18n')].trim();\n            if (content.slice(0, 3) === '#!>') {\n                el.innerHTML = content.slice(3).trim();\n            } else {\n                el.textContent = content;\n            }\n        }\n\n        if (this.useHash) this.updateHash();\n    }\n    /**\n     * change the displayed language for a new one. the behaviour is to change\n     * the language and call translate\n     * @param {string} idx the new language to display\n     */\n    changeTo(idx) {\n        const hasCurrentProperty = Object.prototype.hasOwnProperty.call(this.translations, idx);\n        if (!hasCurrentProperty) {\n            // eslint-disable-next-line\n            throw new Error('You can\\'t change to a non existant language, use one of ' +\n                Object.keys(this.translations));\n        }\n\n        if (this.preferredLanguage === idx) return;\n\n        this.preferredLanguage = idx;\n        this.translate();\n    }\n    /**\n     * Change the hash by appending the current lang code to the URL\n     */\n    updateHash() {\n        window.location.hash = `#/${this.preferredLanguage}`;\n    }\n}\n\nexport default Gnal;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gnal.js"],"sourceRoot":""}